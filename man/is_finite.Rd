% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_finite.R
\name{is_finite}
\alias{is_finite}
\title{Identify Finite Numbers}
\usage{
is_finite(x, include_boolean = FALSE, include_complex = TRUE)
}
\arguments{
\item{x}{An atomic or recursive vector (i.e., c(), matrix(), list(), or data.frame()).}

\item{include_boolean}{Logical (default: FALSE). Consider boolean values as finite?}

\item{include_complex}{Logical (default: TRUE). Consider complex values as finite?}
}
\value{
A logical vector which has the same length and/or dimensions with \code{x}.
}
\description{
A wrapper for \code{base::is.finite()}. Unlike the base implementation,
this version excludes logical values from being considered finite by default.
}
\examples{
test <- list(
    dbl = c(1.2, -3.3, 7.5, 2.9),
    int = 1:5,
    char = c(LETT = LETTERS[1:3], lett = letters[1:3]),
    cplx = matrix(complex(real = 1:12, imaginary = 3:9), nrow = 3),
    bool = data.frame(true = rep(TRUE, 5), false = rep(FALSE, 5)),
    na = list(NA, NA_character_, NA_complex_, na_int = NA_integer_, NA_real_),
    special = list(TRUE, FALSE, NaN, NULL, Inf, -Inf)
)
is_finite(test)
}
